import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r,c as d,d as c,w as n,e as l,o,f as i,b as s}from"./app-B6t6PfTW.js";const h={},u=l('<h1 id="vuepress" tabindex="-1"><a class="header-anchor" href="#vuepress"><span>VuePress</span></a></h1><p>该博客使用的是<code>VuePress2</code>+<code>vuepress-theme-hope</code>主题搭建的。</p><h2 id="搭建" tabindex="-1"><a class="header-anchor" href="#搭建"><span>搭建</span></a></h2><p>因为使用的是<code>vuepress-theme-hope</code>，该主题提供快速搭建脚手架。</p><div class="hint-container warning"><p class="hint-container-title">注意</p><ul><li>环境: LTS 版本 的 Node.js（&gt;=18.19.0、20.x）</li><li>包管理器: npm &gt;= 8、yarn &gt;= 2 或 pnpm &gt;= 7</li><li>使用 Vue3 的 VuePress2 项目</li></ul></div>',5),v=s("div",{class:"language-bash line-numbers-mode","data-highlighter":"shiki","data-ext":"bash","data-title":"bash",style:{"--shiki-light":"#383A42","--shiki-dark":"#abb2bf","--shiki-light-bg":"#FAFAFA","--shiki-dark-bg":"#282c34"}},[s("pre",{class:"shiki shiki-themes one-light one-dark-pro vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"pnpm"),s("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," create"),s("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," vuepress-theme-hope"),s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}}," [项目文件名]")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"})])],-1),b=s("div",{class:"language-bash line-numbers-mode","data-highlighter":"shiki","data-ext":"bash","data-title":"bash",style:{"--shiki-light":"#383A42","--shiki-dark":"#abb2bf","--shiki-light-bg":"#FAFAFA","--shiki-dark-bg":"#282c34"}},[s("pre",{class:"shiki shiki-themes one-light one-dark-pro vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"yarn"),s("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," create"),s("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," vuepress-theme-hope"),s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}}," [项目文件名]")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"})])],-1),m=s("div",{class:"language-bash line-numbers-mode","data-highlighter":"shiki","data-ext":"bash","data-title":"bash",style:{"--shiki-light":"#383A42","--shiki-dark":"#abb2bf","--shiki-light-bg":"#FAFAFA","--shiki-dark-bg":"#282c34"}},[s("pre",{class:"shiki shiki-themes one-light one-dark-pro vp-code"},[s("code",null,[s("span",{class:"line"},[s("span",{style:{"--shiki-light":"#4078F2","--shiki-dark":"#61AFEF"}},"npm"),s("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," init"),s("span",{style:{"--shiki-light":"#50A14F","--shiki-dark":"#98C379"}}," vuepress-theme-hope@latest"),s("span",{style:{"--shiki-light":"#383A42","--shiki-dark":"#ABB2BF"}}," [项目文件名]")])])]),s("div",{class:"line-numbers","aria-hidden":"true",style:{"counter-reset":"line-number 0"}},[s("div",{class:"line-number"})])],-1),k=l(`<div class="hint-container note"><p class="hint-container-title">注</p><p>[项目文件名] 是即将创建的项目文件名， 例如 <code>blog</code>、<code>docs</code></p></div><h2 id="部署" tabindex="-1"><a class="header-anchor" href="#部署"><span>部署</span></a></h2><p>因为我们是直接部署到GitHub上的，GitHub官方提供一种强大的持续集成/持续部署（CI/CD）工具<code>Workflows</code>，允许用户自动化执行构建、测试、打包、发布或部署项目等任务。</p><h3 id="workflows使用" tabindex="-1"><a class="header-anchor" href="#workflows使用"><span>Workflows使用</span></a></h3><p>在根目录下创建<code>.github\\workflows\\docs.yml</code>文件。具体配置可参考<a href="https://docs.github.com/zh/actions/writing-workflows/quickstart" target="_blank" rel="noopener noreferrer">GitHub官方文档</a>。</p><h4 id="一、workflows的基本概念" tabindex="-1"><a class="header-anchor" href="#一、workflows的基本概念"><span>一、Workflows的基本概念</span></a></h4><ul><li>Workflow文件：GitHub Workflows的配置文件是YAML格式的，通常存放在项目根目录下的.github/workflows目录中。每个Workflow文件代表一个独立的自动化流程。</li><li>Jobs：Workflow由一个或多个Jobs组成，每个Job代表一组任务，它们可以在同一个运行器（Runner）上顺序或并行执行。</li><li>Steps：每个Job由多个Steps组成，Steps定义了执行的具体命令或操作（Actions）。</li><li>Actions：Actions是GitHub提供或社区贡献的预定义脚本，可以在Workflow的Steps中直接使用，以完成特定的任务，如检出代码、安装依赖、构建项目等。</li></ul><h4 id="二、workflows的触发条件" tabindex="-1"><a class="header-anchor" href="#二、workflows的触发条件"><span>二、Workflows的触发条件</span></a></h4><p>Workflows可以通过多种事件触发，包括但不限于：</p><ul><li>Push事件：当代码被推送到仓库的指定分支时触发。</li><li>Pull Request事件：当创建或更新拉取请求时触发。</li><li>Schedule事件：根据设定的时间表（如每天、每周等）定时触发。</li><li>其他事件：如创建标签、删除分支、外部仓库的事件等。</li></ul><h4 id="三、workflows的配置示例" tabindex="-1"><a class="header-anchor" href="#三、workflows的配置示例"><span>三、Workflows的配置示例</span></a></h4><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>name: docs</span></span>
<span class="line"><span></span></span>
<span class="line"><span>on:</span></span>
<span class="line"><span>  # 每当 push 到 main 分支时触发部署</span></span>
<span class="line"><span>  push:</span></span>
<span class="line"><span>    branches: [main]</span></span>
<span class="line"><span>  # 手动触发部署</span></span>
<span class="line"><span>  workflow_dispatch:</span></span>
<span class="line"><span></span></span>
<span class="line"><span>jobs:</span></span>
<span class="line"><span>  docs:</span></span>
<span class="line"><span>    runs-on: ubuntu-latest</span></span>
<span class="line"><span></span></span>
<span class="line"><span>    steps:</span></span>
<span class="line"><span>      - uses: actions/checkout@v4</span></span>
<span class="line"><span>        with:</span></span>
<span class="line"><span>          # “最近更新时间” 等 git 日志相关信息，需要拉取全部提交记录</span></span>
<span class="line"><span>          fetch-depth: 0</span></span>
<span class="line"><span></span></span>
<span class="line"><span>      - name: Setup pnpm</span></span>
<span class="line"><span>        uses: pnpm/action-setup@v2</span></span>
<span class="line"><span>        with:</span></span>
<span class="line"><span>          # 选择要使用的 pnpm 版本</span></span>
<span class="line"><span>          version: 9</span></span>
<span class="line"><span>          # 使用 pnpm 安装依赖</span></span>
<span class="line"><span>          run_install: true</span></span>
<span class="line"><span></span></span>
<span class="line"><span>      - name: Setup Node.js</span></span>
<span class="line"><span>        uses: actions/setup-node@v4</span></span>
<span class="line"><span>        with:</span></span>
<span class="line"><span>          # 选择要使用的 node 版本</span></span>
<span class="line"><span>          node-version: 20</span></span>
<span class="line"><span>          # 缓存 pnpm 依赖</span></span>
<span class="line"><span>          cache: pnpm</span></span>
<span class="line"><span></span></span>
<span class="line"><span>      # 运行构建脚本</span></span>
<span class="line"><span>      - name: Build VuePress site</span></span>
<span class="line"><span>        run: pnpm docs:build</span></span>
<span class="line"><span></span></span>
<span class="line"><span>      # 查看 workflow 的文档来获取更多信息</span></span>
<span class="line"><span>      # @see https://github.com/crazy-max/ghaction-github-pages</span></span>
<span class="line"><span>      - name: Deploy to GitHub Pages</span></span>
<span class="line"><span>        uses: crazy-max/ghaction-github-pages@v4</span></span>
<span class="line"><span>        with:</span></span>
<span class="line"><span>          # 部署到 gh-pages 分支</span></span>
<span class="line"><span>          target_branch: gh-pages</span></span>
<span class="line"><span>          # 部署目录为 VuePress 的默认输出目录</span></span>
<span class="line"><span>          build_dir: blog/.vuepress/dist</span></span>
<span class="line"><span>        env:</span></span>
<span class="line"><span>          # @see https://docs.github.com/cn/actions/reference/authentication-in-a-workflow#about-the-github_token-secret</span></span>
<span class="line"><span>          GITHUB_TOKEN: \${{ secrets.GITHUB_TOKEN }}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,12);function g(w,f){const p=r("CodeTabs");return o(),d("div",null,[u,c(p,{id:"32",data:[{id:"pnpm"},{id:"yarn"},{id:"npm"}],active:2,"tab-id":"shell"},{title0:n(({value:e,isActive:a})=>[i("pnpm")]),title1:n(({value:e,isActive:a})=>[i("yarn")]),title2:n(({value:e,isActive:a})=>[i("npm")]),tab0:n(({value:e,isActive:a})=>[v]),tab1:n(({value:e,isActive:a})=>[b]),tab2:n(({value:e,isActive:a})=>[m]),_:1}),k])}const y=t(h,[["render",g],["__file","vuepress搭建、部署.html.vue"]]),F=JSON.parse('{"path":"/posts/vuepress/vuepress%E6%90%AD%E5%BB%BA%E3%80%81%E9%83%A8%E7%BD%B2.html","title":"VuePress","lang":"zh-CN","frontmatter":{"cover":"/assets/images/cover2.jpg","icon":"pen-to-square","date":"2024-07-31T00:00:00.000Z","category":["VuePress"],"tag":["VuePress2","git","vite","vuepress-theme-hope"],"star":true,"sticky":true},"headers":[{"level":2,"title":"搭建","slug":"搭建","link":"#搭建","children":[]},{"level":2,"title":"部署","slug":"部署","link":"#部署","children":[{"level":3,"title":"Workflows使用","slug":"workflows使用","link":"#workflows使用","children":[]}]}],"git":{"createdTime":1722435467000,"updatedTime":1723472942000,"contributors":[{"name":"hlp","email":"865225435@qq.com","commits":1}]},"readingTime":{"minutes":2.42,"words":725},"filePathRelative":"posts/vuepress/vuepress搭建、部署.md","localizedDate":"2024年7月31日","excerpt":"\\n<p>该博客使用的是<code>VuePress2</code>+<code>vuepress-theme-hope</code>主题搭建的。</p>\\n<h2>搭建</h2>\\n<p>因为使用的是<code>vuepress-theme-hope</code>，该主题提供快速搭建脚手架。</p>\\n<div class=\\"hint-container warning\\">\\n<p class=\\"hint-container-title\\">注意</p>\\n<ul>\\n<li>环境: LTS 版本 的 Node.js（&gt;=18.19.0、20.x）</li>\\n<li>包管理器: npm &gt;= 8、yarn &gt;= 2 或 pnpm &gt;= 7</li>\\n<li>使用 Vue3 的 VuePress2 项目</li>\\n</ul>\\n</div>"}');export{y as comp,F as data};
